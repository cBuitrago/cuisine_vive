<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use stdClass;

/**
 * DishLanguageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DishLanguageRepository extends EntityRepository {

    /**
     * @param string $name
     *
     * @return stdClass | boolean
     */
    public function getDishLanguageByName($name) {

        $dishLanguage = $this->getEntityManager()
                ->getRepository('AppBundle:DishLanguage')
                ->findOneByName($name);

        if ($dishLanguage == NULL) {
            return FALSE;
        }

        $dishResponse = new stdClass();

        $dish = $dishLanguage->getDish();
        $dishResponse->name = $dishLanguage->getName();
        $dishResponse->description = $dishLanguage->getDescription();
        $dishResponse->photo = $dishLanguage->getDish()->getPhoto();
        $dishResponse->ingredients = $dishLanguage->getIngredients();
        $dishResponse->language = $dishLanguage->getLanguage()->getName();
        $dishResponse->icons = [];

        foreach ($dish->getIcons() as $icon) {
            array_push($dishResponse->icons, $icon->getIcon()->getImage());
        }
        $dishResponse->portions = [];
        foreach ($dish->getPortions() as $dishPortion) {
            foreach ($dishPortion->getPortion()->getLanguages() as $portionLanguage) {
                if ($portionLanguage->getLanguage()->getName() == $dishResponse->language) {
                    $portionResponse = new stdClass();
                    $portionResponse->id = $dishPortion->getId();
                    $portionResponse->name = $portionLanguage->getName();
                    $portionResponse->price = number_format($dishPortion->getPrice(), 2);
                    array_push($dishResponse->portions, $portionResponse);
                    break;
                }
            }
        }
        foreach ($dish->getLanguages() as $dishLanguage) {
            if ($dishLanguage->getLanguage()->getName() != $dishResponse->language) {
                $dishResponse->linkTranslate = str_replace(" ", "-", $dishLanguage->getName());
                break;
            }
        }

        return $dishResponse;
    }

}
